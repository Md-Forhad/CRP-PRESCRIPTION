--Medication
ALTER TABLE MEDICATION_MST_BLOCK DROP PRIMARY KEY CASCADE;

DROP TABLE MEDICATION_MST_BLOCK CASCADE CONSTRAINTS;

CREATE TABLE MEDICATION_MST_BLOCK (
  MEDICATION_BLOCK_ID       NUMBER(20)           NOT NULL,
  MEDICATION_ID             NUMBER(10),
  MEDICATION_BLOCK_STATUS   NUMBER(2),
  MEDICATION_DOC_ID         NUMBER(20),
  MEDICATION_ENTRY_BY       VARCHAR2(30),
  MEDICATION_ENTRY_TIME     DATE DEFAULT SYSDATE
);

CREATE UNIQUE INDEX MEDICATION_MST_BLOCK_PK ON MEDICATION_MST_BLOCK (MEDICATION_BLOCK_ID);

CREATE OR REPLACE TRIGGER MEDICATION_BLOCK_PRE_INSERT
BEFORE INSERT ON MEDICATION_MST_BLOCK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
    SELECT NVL(MAX(MEDICATION_BLOCK_ID),0) + 1
    INTO :NEW.MEDICATION_BLOCK_ID
    FROM MEDICATION_MST_BLOCK;
END;
/

-----------------------------------LOG START------------------------------------
ALTER TABLE MEDICATION_MST_BLOCK_LOG DROP PRIMARY KEY CASCADE;

DROP TABLE MEDICATION_MST_BLOCK_LOG CASCADE CONSTRAINTS;

CREATE TABLE MEDICATION_MST_BLOCK_LOG (
  MEDICATION_BLOCK_LOG_ID   NUMBER,
  MEDICATION_BLOCK_ID       NUMBER(20)           NOT NULL,
  MEDICATION_ID             NUMBER(10),
  MEDICATION_BLOCK_STATUS   NUMBER(2),
  MEDICATION_DOC_ID         NUMBER(20),
  MEDICATION_ENTRY_BY       VARCHAR2(30),
  MEDICATION_ENTRY_TIME     DATE,
  MEDICATION_LOG_TIME       VARCHAR2(30),
  MEDICATION_LOG_STATUS     VARCHAR2(10)
);

CREATE UNIQUE INDEX MEDICATION_MST_BLOCK_LOG_PK ON MEDICATION_MST_BLOCK_LOG (MEDICATION_BLOCK_LOG_ID);

CREATE OR REPLACE TRIGGER MEDICATION_BLOCK_LOG_PRE_INS
BEFORE INSERT ON MEDICATION_MST_BLOCK_LOG
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
    SELECT NVL(MAX(MEDICATION_BLOCK_LOG_ID),0) + 1
    INTO :NEW.MEDICATION_BLOCK_LOG_ID
    FROM MEDICATION_MST_BLOCK_LOG;
END;
/

ALTER TABLE MEDICATION_MST_BLOCK_LOG ADD (
  CONSTRAINT MEDICATION_MST_BLOCK_LOG_PK PRIMARY KEY (MEDICATION_BLOCK_LOG_ID)
  USING INDEX MEDICATION_MST_BLOCK_LOG_PK ENABLE VALIDATE);
---------------------------------------LOG END----------------------------------


CREATE OR REPLACE TRIGGER MEDICATION_BLOCK_PRE_INSERT
BEFORE INSERT OR UPDATE OR DELETE
ON MEDICATION_MST_BLOCK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
    STATUS VARCHAR2(10);
BEGIN
    IF INSERTING OR UPDATING THEN
        IF INSERTING THEN STATUS := 'INSERT';
        ELSIF UPDATING THEN STATUS := 'UPDATE';
        END IF;
		
        INSERT INTO MEDICATION_MST_BLOCK_LOG (MEDICATION_BLOCK_ID,
                                          MEDICATION_ID, 
                                          MEDICATION_BLOCK_STATUS, 
                                          MEDICATION_DOC_ID, 
                                          MEDICATION_ENTRY_BY, 
                                          MEDICATION_ENTRY_TIME, 
                                          MEDICATION_LOG_TIME, 
                                          MEDICATION_LOG_STATUS)
        VALUES (:NEW.MEDICATION_BLOCK_ID,
                :NEW.MEDICATION_ID, 
                :NEW.MEDICATION_BLOCK_STATUS, 
                :NEW.MEDICATION_DOC_ID, 
                :NEW.MEDICATION_ENTRY_BY, 
                :NEW.MEDICATION_ENTRY_TIME,  
                TO_CHAR(SYSDATE,'DD/MM/RRRR HH12:MI:SS AM'),
                STATUS);
    ELSE
        STATUS := 'DELETE';
        INSERT INTO MEDICATION_MST_BLOCK_LOG (MEDICATION_BLOCK_ID,
                                          MEDICATION_ID, 
                                          MEDICATION_BLOCK_STATUS, 
                                          MEDICATION_DOC_ID, 
                                          MEDICATION_ENTRY_BY, 
                                          MEDICATION_ENTRY_TIME, 
                                          MEDICATION_LOG_TIME, 
                                          MEDICATION_LOG_STATUS)
        VALUES (:OLD.MEDICATION_BLOCK_ID,
                :OLD.MEDICATION_ID, 
                :OLD.MEDICATION_BLOCK_STATUS, 
                :OLD.MEDICATION_DOC_ID, 
                :OLD.MEDICATION_ENTRY_BY, 
                :OLD.MEDICATION_ENTRY_TIME, 
                TO_CHAR(SYSDATE,'DD/MM/RRRR HH12:MI:SS AM'),
                STATUS);
    END IF;
END;
/

ALTER TABLE MEDICATION_MST_BLOCK ADD (
  CONSTRAINT MEDICATION_MST_BLOCK_PK PRIMARY KEY (MEDICATION_BLOCK_ID)
  USING INDEX MEDICATION_MST_BLOCK_PK ENABLE VALIDATE);
